pipeline {
  agent {
    kubernetes {
      defaultContainer 'jnlp'
      yaml '''
        apiVersion: v1
        kind: Pod
        metadata:
          labels:
            label: jnlp
        spec:
          serviceAccount: jenkins-admin
          containers:
          - name: jnlp
            image: dumln86/jenkins-agent:1.0.5
            command:
            - cat
            tty: true
            volumeMounts:
              - name: kaniko-secret
                mountPath: /kaniko/.docker
          volumes:
              - name: kaniko-secret
                secret:
                    secretName: dockercred
                    items:
                    - key: .dockerconfigjson
                      path: config.json
          - name: busybox
            image: busybox
            command:
            - cat
            tty: true
        '''
      retries 2
    }
  }
  environment {
    KUBE_NAMESPACE = 'devops-tools'
    APP_NAME = 'springboot-crud-k8s'
    APP_PATH = 'springboot-crud-k8s'
    RELEASE = '1.0.0'
    DOCKER_USER = 'dumln86'
    DOCKER_PASS = 'dockerhub'
    IMAGE_NAME = "${DOCKER_USER}" + '/' + "${APP_NAME}"
    IMAGE_TAG = "${RELEASE}-${BUILD_NUMBER}"
    KUBECTL_PATH = "${JENKINS_HOME}/kubectl"
    /* JENKINS_API_TOKEN = credentials("JENKINS_API_TOKEN") */
  }

  stages {
    stage('Cleanup Workspace') {
      steps {
        cleanWs()
      }
    }

    stage('Checkout from SCM') {
      steps {
        git branch: 'main', credentialsId: 'github', url: 'https://github.com/dumln86/e2e-pipeline'
      }
    }

    stage('Build Maven project') {
      steps {
        sh 'mvn -f `pwd`/${APP_PATH} clean install -DskipTests'
      }
    }

    stage('Build & Push docker image with Kaniko') {
      steps {
        sh 'ls -la `pwd`/${APP_PATH}'
        sh '/kaniko/executor --dockerfile=`pwd`/${APP_PATH}/Dockerfile --context=`pwd`/${APP_PATH} --destination=${IMAGE_NAME}:${IMAGE_TAG}'
      }
    }
    stage('Deploy to Kubernetes') {
      steps {
        // Deploy to Kubernetes using the Kubernetes plugin
        sh 'pwd'
        sh 'cd ${APP_PATH}'
        sh 'sed -i "s/__IMAGE_TAG__/${IMAGE_TAG}/g" k8s/deployment.yaml'
        sh 'kubectl apply -f k8s'
      }
    }
  }

      post {
        success {
      echo 'Deployment successful!'
        }
        failure {
      echo 'Deployment failed!'
        }
      }
}
